buildscript {
	ext {
		springBootVersion = '3.2.7'
		elasticSearchVersion = '7.9.1'
		lombokVersion = '1.18.26'
		mapStructVersion = '1.3.1.Final'
		mysqlJdbcDriverVersion = '8.0.33'
		liquibaseVersion = '4.4.3'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.book'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	integrationTestRuntime.extendsFrom testRuntimeOnly
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
	integrationTestImplementation.extendsFrom testImplementation
}

repositories {
	mavenCentral()
}

sourceSets {
	integrationTest {
		java {
			srcDir file('src/integration-test/java')

			compileClasspath += main.output + test.output + main.compileClasspath + test.compileClasspath
			runtimeClasspath += main.output + test.output + main.runtimeClasspath + test.runtimeClasspath
		}

		resources.srcDir file('src/integration-test/resources')
	}
}

dependencies {

	// Spring dependencies:
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation "org.hibernate.validator:hibernate-validator:8.0.0.Final"


	// Persistence dependencies:
	runtimeOnly 'org.postgresql:postgresql'

	// Annotation processors:
	implementation("org.mapstruct:mapstruct:$mapStructVersion")
	compileOnly("org.mapstruct:mapstruct-processor:$mapStructVersion")
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor(
			"org.projectlombok:lombok:$lombokVersion",
			"org.mapstruct:mapstruct-processor:$mapStructVersion"
	)

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
	useJUnitPlatform()

	description = "Runs the integration tests"
	group = "verification"
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	maxHeapSize = '1024m'
}
